clippy_task:
    container:
        image: rust:latest
    component_script: rustup component add clippy
    lockfile_script: cargo generate-lockfile
    cargo_cache:
        folder: $CARGO_HOME/registry
        fingerprint_script: cat Cargo.lock
    clippy_script: cargo clippy --tests -- -D warnings
    before_cache_script: rm -rf $CARGO_HOME/registry/index

rustfmt_task:
    container:
        # Our .rustfmt.toml uses currently unstable features
        image: rustlang/rust:nightly
    component_script: rustup component add rustfmt
    fmt_script: cargo fmt --all -- --check

linux_task:
    matrix:
    - container:
        image: rust:latest
    - allow_failures: true
      container:
        image: rustlang/rust:nightly
    lockfile_script: cargo generate-lockfile
    cargo_cache:
        folder: $CARGO_HOME/registry
        fingerprint_script: cat Cargo.lock
    build_script: RUSTFLAGS="-D warnings" cargo build
    build_tests_script: RUSTFLAGS="-D warnings" cargo build --tests
    test_script: cargo test -- --test-threads 1
    before_cache_script: rm -rf $CARGO_HOME/registry/index

minimal_version_task:
    # We make sure we can build with the minimum specified versions
    container:
        image: rustlang/rust:nightly
    lockfile_script: cargo generate-lockfile -Z minimal-versions
    cargo_cache:
        folder: $CARGO_HOME/registry
        fingerprint_script: cat Cargo.lock
    # FIXME: build with 1.38
    build_script: RUSTFLAGS="-D warnings" cargo build
    before_cache_script: rm -rf $CARGO_HOME/registry/index

coverage_task:
    container:
        image: rust:latest
    environment:
        CODECOV_TOKEN: ENCRYPTED[0064853784b30e0b6f74648c237de43e2ef8d37e7146b2fc1b53872feef0519e5b2e9a0862056e400e528e7fdafa0b55]
    tarpaulin_cache:
        folder: .ci
        populate_script: .ci/tarpaulin.sh
        fingerprint_script: cat .ci/tarpaulin.sh
    lockfile_script: cargo generate-lockfile
    cargo_cache:
        folder: $CARGO_HOME/registry
        fingerprint_script: cat Cargo.lock
    coverage_script: PATH=$PATH:$PWD/.ci cargo tarpaulin --out Xml
    upload_script: bash <(curl -s https://codecov.io/bash) -X gcov
    before_cache_script: rm -rf $CARGO_HOME/registry/index
